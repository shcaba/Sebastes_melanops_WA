1.6,
1.7,
4,4,4,4,4,4,4,4,4,4,4,4
)
vbgf.out<-growth(size=size,age=age,Sinf=150,K=1,t0=0,graph=FALSE)
vbgf.out$vout
Linf.in<-158
size=c(35.05342189,
48.87895909,
61.50191943,
73.02690578,
83.54942243,
93.1566665,
101.9282505,
109.936862,
117.2488662,
123.9248555,
130.020152,
135.5852656,
140.6663129,
145.3053991,
149.540967,
Linf.in-5,
Linf.in-5,
Linf.in-5,
Linf.in-5,
Linf.in,
Linf.in,
Linf.in,
Linf.in,
Linf.in+5,
Linf.in+5,
Linf.in+5,
Linf.in+5
)
age=c(0.3,
0.4,
0.5,
0.6,
0.7,
0.8,
0.9,
1,
1.1,
1.2,
1.3,
1.4,
1.5,
1.6,
1.7,
4,4,4,4,4,4,4,4,4,4,4,4
)
vbgf.out<-growth(size=size,age=age,Sinf=150,K=1,t0=0,graph=FALSE)
vbgf.out$vout
Linf.in<-159
size=c(35.05342189,
48.87895909,
61.50191943,
73.02690578,
83.54942243,
93.1566665,
101.9282505,
109.936862,
117.2488662,
123.9248555,
130.020152,
135.5852656,
140.6663129,
145.3053991,
149.540967,
Linf.in-5,
Linf.in-5,
Linf.in-5,
Linf.in-5,
Linf.in,
Linf.in,
Linf.in,
Linf.in,
Linf.in+5,
Linf.in+5,
Linf.in+5,
Linf.in+5
)
age=c(0.3,
0.4,
0.5,
0.6,
0.7,
0.8,
0.9,
1,
1.1,
1.2,
1.3,
1.4,
1.5,
1.6,
1.7,
4,4,4,4,4,4,4,4,4,4,4,4
)
vbgf.out<-growth(size=size,age=age,Sinf=150,K=1,t0=0,graph=FALSE)
vbgf.out$vout
?rnorm
shiny::runApp('GitHub/SS-DL-tool')
head(Ensemble_SO)
head(SpOt_en[[1]])
length(SpOt_en)
dim(SpOt_en)
dim(SpOt_en)
Model.outputs<-list("Spawning Output"=SpOt_en,"Relative Stock Status"=Bratio_en,"Fishing mortality"=F_en,"1-SPR"=SPR_en)
Ensemble.outputs<-list("Spawning Output"=Ensemble_SO,"Relative Stock Status"=Ensemble_Bratio,"Fishing mortality"=Ensemble_F,"1-SPR"=Ensemble_SPR)
Ensemble.outputs.plots<-list("Spawning Output"=Ensemble_SO_plot,"Relative Stock Status"=Ensemble_Bratio_plot,"Fishing mortality"=Ensemble_F_plot,"1-SPR"=Ensemble_SPR_plot)
Model.outputs<-list("Spawning Output"=SpOt_en,"Relative Stock Status"=Bratio_en,"Fishing mortality"=F_en,"1-SPR"=SPR_en)
Ensemble.outputs<-list("Spawning Output"=Ensemble_SO,"Relative Stock Status"=Ensemble_Bratio,"Fishing mortality"=Ensemble_F,"1-SPR"=Ensemble_SPR)
Ensemble.outputs.plots<-list("Spawning Output"=Ensemble_SO_plot,"Relative Stock Status"=Ensemble_Bratio_plot,"Fishing mortality"=Ensemble_F_plot,"1-SPR"=Ensemble_SPR_plot)
save(Model.outputs,file=paste0(Ensemble_model_dir_out,"/Model_results",".DMP"))
save(Ensemble.outputs,file=paste0(Ensemble_model_dir_out,"/Ensemble_results",".DMP"))
save(Ensemble.outputs.plots,file=paste0(Ensemble_model_dir_out,"/Ensemble_results_plots",".DMP"))
shiny::runApp('GitHub/SS-DL-tool')
head(Ensemble_SO)
SpOt_en[[1]][[1]]
dim(SpOt_en[[1]][[1]])
dim(SpOt_en[[1]])
length(SpOt_en[[1]])
length(SpOt_en[[1]][1])
length(SpOt_en[[1]][2])
length(SpOt_en[[1]][130])
(SpOt_en[[1]])
names(SpOt_en[[1]])
names(SpOt_en[[2]])
names(SpOt_en[[3]])
shiny::runApp('GitHub/SS-DL-tool')
length(SpOt_en[[i]])
length(SpOt_en[[i]][1])
length(SpOt_en[[i]][1,])
dimlength(SpOt_en[[i]])
dim(SpOt_en[[i]])
length(SpOt_en[[i]][1,])
(SpOt_en[[i]][1]
SpOt_en[[i]][1]
dim(SpOt_en[[i]][1])
length(SpOt_en[[i]][1])
SpOt_en[[i]][2]
name(SpOt_en[[i]][1])
names(SpOt_en[[i]][1])
shiny::runApp('GitHub/SS-DL-tool')
shiny::runApp('GitHub/SS-DL-tool')
shiny::runApp('GitHub/SS-DL-tool')
shiny::runApp('GitHub/SS-DL-tool')
SPR_t[[i]]
tail(SPR_t[[i]])
unlist(SPR_t)
tail(SPR_t[[i]])
tail(SO_0[[i]])
tail(SO_0[[1]])
unlist(SPR_t,SIMPLIFY-TRUE)
?unlist
mapply(c,SO_t[[1]],SO_t[[2]])
mapply(cbind,SO_t[[1]],SO_t[[2]])
SO_0[[i]]<-data.frame(Year=as.numeric(names(SpOt_en[[i]][1])),SO0=SpOt_en[[i]][1],Model=input$myEnsemble[i])
i<-1
SO_0[[i]]<-data.frame(Year=as.numeric(names(SpOt_en[[i]][1])),SO0=SpOt_en[[i]][1],Model=input$myEnsemble[i])
mapply(cbind,SO_0[[1]],SO_0[[2]])
cbind(SO_0[[1]],SO_0[[2]])
rbind(SO_0[[1]],SO_0[[2]])
mapply(rbind,SO_0[[1]],SO_0[[2]])
rbind(SO_0[[1]],SO_0[[2]])
SO_0<-SO_t<-Bratio_t<-F_t<-SPR_t<-data.frame(Year=NA,Metric=NA,Model=NA)
SO_0<-rbind(SO_0,data.frame(Year=as.numeric(names(SpOt_en[[i]][1])),Metric=as.numeric(SpOt_en[[i]][1]),Model=input$myEnsemble[i]))
head(SpOt_en[[i]][1])
head(SpOt_en[[i]][1][1])
as.numeric(SpOt_en[[i]][1])
class(SpOt_en[[i]][1])
unlist(SpOt_en[[i]][1])
SO_0<-rbind(SO_0,data.frame(Year=as.numeric(names(SpOt_en[[i]][1])),Metric=unlist(SpOt_en[[i]][1]),Model=input$myEnsemble[i]))
SO_0
head(SO_0)
i<-2
SO_0<-rbind(SO_0,data.frame(Year=as.numeric(names(SpOt_en[[i]][1])),Metric=unlist(SpOt_en[[i]][1]),Model=input$myEnsemble[i]))
dim(SO_0)
head(SO_0)
tail(SO_0)
i=1
Bratio_en[[i]]<-Map(mean.fxn,modsummary.ensemble$Bratio[,i],modsummary.ensemble$BratioSD[,i])
F_t<-rbind(F_t,data.frame(Year=names(F_en[[i]][length(Nsamps_ensemble_wts)]),Metric=unlist(F_en[[i]][length(Nsamps_ensemble_wts)]),Model=input$myEnsemble[i]))
SO_t<-rbind(SO_t,data.frame(Year=names(SpOt_en[[i]][length(Nsamps_ensemble_wts)]),Metric=unlist(SpOt_en[[i]][length(Nsamps_ensemble_wts)]),Model=input$myEnsemble[i])
)
SPR_t<-rbind(SPR_t,data.frame(Year=names(SPR_en[[i]][length(Nsamps_ensemble_wts)]),Metric=unlist(SPR_en[[i]][length(Nsamps_ensemble_wts)]),Model=input$myEnsemble[i]))
i=2
SPR_t<-rbind(SPR_t,data.frame(Year=names(SPR_en[[i]][length(Nsamps_ensemble_wts)]),Metric=unlist(SPR_en[[i]][length(Nsamps_ensemble_wts)]),Model=input$myEnsemble[i]))
SO_t<-rbind(SO_t,data.frame(Year=names(SpOt_en[[i]][length(Nsamps_ensemble_wts)]),Metric=unlist(SpOt_en[[i]][length(Nsamps_ensemble_wts)]),Model=input$myEnsemble[i])
)
F_t<-rbind(F_t,data.frame(Year=names(F_en[[i]][length(Nsamps_ensemble_wts)]),Metric=unlist(F_en[[i]][length(Nsamps_ensemble_wts)]),Model=input$myEnsemble[i]))
Bratio_en[[i]]<-Map(mean.fxn,modsummary.ensemble$Bratio[,i],modsummary.ensemble$BratioSD[,i])
Bratio_t<-rbind(Bratio_t,data.frame(Year=names(Bratio_en[[i]][length(Nsamps_ensemble_wts)]),Metric=unlist(Bratio_en[[i]][length(Nsamps_ensemble_wts)]),Model=input$myEnsemble[i]))
Bratio_t<-rbind(Bratio_t,data.frame(Year=names(Bratio_en[[i]][length(Nsamps_ensemble_wts)]),Metric=unlist(Bratio_en[[i]][length(Nsamps_ensemble_wts)]),Model=input$myEnsemble[i]))
i=1
SO_0<-SO_t<-Bratio_t<-F_t<-SPR_t<-data.frame(Year=NA,Metric=NA,Model=NA)
SO_0<-rbind(SO_0,data.frame(Year=as.numeric(names(SpOt_en[[i]][1])),Metric=unlist(SpOt_en[[i]][1]),Model=input$myEnsemble[i]))
SO_t<-rbind(SO_t,data.frame(Year=names(SpOt_en[[i]][length(Nsamps_ensemble_wts)]),Metric=unlist(SpOt_en[[i]][length(Nsamps_ensemble_wts)]),Model=input$myEnsemble[i]))
Bratio_t<-rbind(Bratio_t,data.frame(Year=names(Bratio_en[[i]][length(Nsamps_ensemble_wts)]),Metric=unlist(Bratio_en[[i]][length(Nsamps_ensemble_wts)]),Model=input$myEnsemble[i]))
Bratio_t
unlist(Bratio_en[[i]][length(Nsamps_ensemble_wts)])
head(unlist(Bratio_en[[i]][length(Nsamps_ensemble_wts)]))
names(Bratio_en[[i]][length(Nsamps_ensemble_wts)])
Bratio_en[[i]]
head(Bratio_en[[i]])
length(Nsamps_ensemble_wts)]
length(Nsamps_ensemble_wts)
nrow(modsummary.ensemble$SpawnBio)
i
SO_0<-rbind(SO_0,data.frame(Year=as.numeric(names(SpOt_en[[i]][1])),Metric=unlist(SpOt_en[[i]][1]),Model=input$myEnsemble[i]))
SO_t<-rbind(SO_t,data.frame(Year=names(SpOt_en[[i]][nrow(modsummary.ensemble$SpawnBio)]),Metric=unlist(SpOt_en[[i]][length(Nsamps_ensemble_wts)]),Model=input$myEnsemble[i]))
Bratio_t<-rbind(Bratio_t,data.frame(Year=names(Bratio_en[[i]][nrow(modsummary.ensemble$Bratio)]),Metric=unlist(Bratio_en[[i]][nrow(modsummary.ensemble$Bratio)]),Model=input$myEnsemble[i]))
names(Bratio_en[[i]][nrow(modsummary.ensemble$Bratio)])
Bratio_en[[i]][nrow(modsummary.ensemble$Bratio)]
Bratio_en[[i]]
modsummary.ensemble$Bratio$Yr
names(Bratio_en[[i]])<-modsummary.ensemble$Bratio$Yr
Bratio_en[[i]][1]
names(Bratio_en[[2]])<-modsummary.ensemble$Bratio$Yr
Bratio_t<-rbind(Bratio_t,data.frame(Year=names(Bratio_en[[i]][nrow(modsummary.ensemble$Bratio)]),Metric=unlist(Bratio_en[[i]][nrow(modsummary.ensemble$Bratio)]),Model=input$myEnsemble[i]))
F_t<-rbind(F_t,data.frame(Year=names(F_en[[i]][nrow(modsummary.ensemble$Fvalue)]),Metric=unlist(F_en[[i]][nrow(modsummary.ensemble$Fvalue)]),Model=input$myEnsemble[i]))
SPR_t<-rbind(SPR_t,data.frame(Year=names(SPR_en[[i]][nrow(modsummary.ensemble$SPRratio)]),Metric=unlist(SPR_en[[i]][nrow(modsummary.ensemble$SPRratio)]),Model=input$myEnsemble[i]))
i=2
SPR_t<-rbind(SPR_t,data.frame(Year=names(SPR_en[[i]][nrow(modsummary.ensemble$SPRratio)]),Metric=unlist(SPR_en[[i]][nrow(modsummary.ensemble$SPRratio)]),Model=input$myEnsemble[i]))
F_t<-rbind(F_t,data.frame(Year=names(F_en[[i]][nrow(modsummary.ensemble$Fvalue)]),Metric=unlist(F_en[[i]][nrow(modsummary.ensemble$Fvalue)]),Model=input$myEnsemble[i]))
Bratio_t<-rbind(Bratio_t,data.frame(Year=names(Bratio_en[[i]][nrow(modsummary.ensemble$Bratio)]),Metric=unlist(Bratio_en[[i]][nrow(modsummary.ensemble$Bratio)]),Model=input$myEnsemble[i]))
SO_0<-rbind(SO_0,data.frame(Year=as.numeric(names(SpOt_en[[i]][1])),Metric=unlist(SpOt_en[[i]][1]),Model=input$myEnsemble[i]))
SO_t<-rbind(SO_t,data.frame(Year=names(SpOt_en[[i]][nrow(modsummary.ensemble$SpawnBio)]),Metric=unlist(SpOt_en[[i]][length(Nsamps_ensemble_wts)]),Model=input$myEnsemble[i]))
head(Bratio_t)
tail(Bratio_t)
head(Ensemble_SO)
colnames(Ensemble_SO[ncol(Ensemble_SO)]
)
colnames(Ensemble_SO)
colnames(Ensemble_SO[ncol(Ensemble_SO)])
ncol(Ensemble_SO)
as.numeric(colnames(Ensemble_SO)[ncol(Ensemble_SO)])
SO_0<-rbind(SO_0[-1,],data.frame(Year=as.numeric(colnames(Ensemble_SO)[1]),Metric=Ensemble_SO[,1],Model="Ensemble"))
head(SO_0)
tail(SO_0)
SO_t<-rbind(SO_t[-1,],data.frame(Year=as.numeric(colnames(Ensemble_SO)[ncol(Ensemble_SO)]),Metric=Ensemble_SO[,ncol(Ensemble_SO)],Model="Ensemble"))
Bratio_t<-rbind(Bratio_t[-1,],data.frame(Year=as.numeric(colnames(Ensemble_Bratio)[ncol(Ensemble_Bratio)]),Metric=Ensemble_Bratio[,ncol(Ensemble_Bratio)],Model="Ensemble"))
F_t<-rbind(F_t[-1,],data.frame(Year=as.numeric(colnames(Ensemble_F)[ncol(Ensemble_F)]),Metric=Ensemble_F[,ncol(Ensemble_F)],Model="Ensemble"))
SPR_t<-rbind(SPR_t[-1,],data.frame(Year=as.numeric(colnames(Ensemble_SPR)[ncol(Ensemble_SPR)]),Metric=Ensemble_SPR[,ncol(Ensemble_SPR)],Model="Ensemble"))
ggplot(SO_0,aes(Year,Metric,fill=Model))+geom_violin
ggplot(SO_0,aes(Year,Metric,fill=Model))+geom_violin()
SO_0$Year<-as.factor(SO_0$Year)
ggplot(SO_0,aes(Year,Metric,fill=Model))+geom_violin()
ggplot(SO_0,aes(Year,Metric,fill=Model))+geom_boxplot()
ggplot(SO_0,aes(Year,Metric,fill=Model))+
geom_violin()+
stat_summary(fun.data="mean_sdl", mult=1,
geom="crossbar", width=0.2 )+
stat_summary(fun.data=mean_sdl, mult=1,
geom="pointrange", color="red")
ggplot(SO_0,aes(Year,Metric,fill=Model))+
geom_violin()+
stat_summary(fun.data="mean_sdl", mult=1,
geom="crossbar", width=0.2 )
ggplot(SO_0,aes(Year,Metric,fill=Model))+
geom_violin()
ggplot(SO_0,aes(Year,Metric,fill=Model))+
geom_boxplot+
title("Initial Spawning Output")
ggplot(SO_0,aes(Year,Metric,fill=Model))+
geom_boxplot()+
title("Initial Spawning Output")
?theme
?title
ggplot(SO_t,aes(Year,Metric,fill=Model))+
geom_boxplot()
ggplot(SO_0,aes(Model,Metric,fill=Model))+
geom_boxplot()
ggplot(SO_t,aes(Year,Metric,fill=Model))+
geom_boxplot()+
ylab("Terminal Year Spawning Output")
SO_t$Year<-as.factor(SO_t$Year)
Bratio_0$Year<-as.factor(Bratio_t$Year)
Bratio_t$Year<-as.factor(Bratio_t$Year)
F_t$Year<-as.factor(F_t$Year)
SPR_t$Year<-as.factor(SPR_t$Year)
ggplot(SO_t,aes(Year,Metric,fill=Model))+
geom_boxplot()+
ylab("Terminal Year Spawning Output")
ggplot(SO_t,aes(Model,Metric,fill=Model))+
geom_boxplot()+
ylab("Terminal Year Spawning Output")
ggplot(Bratio_t,aes(Model,Metric,fill=Model))+
geom_boxplot()+
ylab("Relative stock status")
ggplot(F_t,aes(Model,Metric,fill=Model))+
geom_boxplot()+
ylab("Fishing mortality")
ggplot(SPR_t,aes(Model,Metric,fill=Model))+
geom_boxplot()+
ylab("1-SPR")
ggplot(Bratio_t,aes(Model,Metric,fill=Model))+
geom_boxplot()+
ylab("Relative stock status")
ggplot(Bratio_t,aes(Model,Metric,fill=Model))+
geom_violin()+
ylab("Relative stock status")
ggplot(SO_0,aes(Model,Metric,fill=Model))+
geom_violin()+
ylab("Initial Spawning Output")
ggplot(SO_0,aes(Model,Metric,fill=Model))+
geom_boxplot()+
ylab("Initial Spawning Output")
summary(SO_0$Metric)
hist(SO_0$Metric)
ggplot(SO_0,aes(Model,Metric,fill=Model))+
geom_line()+
ylab("Initial Spawning Output")
ggplot(SO_0,aes(Model,Metric,fill=Model))+
geom_density()+
ylab("Initial Spawning Output")
ggplot(SO_0,aes(Metric,fill=Model))+
geom_density()+
ylab("Initial Spawning Output")
ggplot(SO_0,aes(x=Metric,fill=Model))+
geom_density()+
ylab("Initial Spawning Output")
ggplot(SO_0,aes(x=Metric,color=Model,fill=Model))+
geom_density()+
ylab("Initial Spawning Output")
ggplot(SO_0,aes(x=Metric,color=Model,fill=Model))+
geom_jitter(+
ylab("Initial Spawning Output")
ggplot(SO_0,aes(x=Metric,color=Model,fill=Model))+
geom_jitter()+
ylab("Initial Spawning Output")
ggplot(SO_0,aes(x=Metric,y=Model))+
geom_jitter()+
ylab("Initial Spawning Output")
ggplot(SO_0,aes(x=Metric,y=Model))+
geom_count()+
ylab("Initial Spawning Output")
runApp('GitHub/SS-DL-tool')
runApp('GitHub/SS-DL-tool')
runApp('GitHub/SS-DL-tool')
ggplot(SO_0,aes(Model,Metric,fill=Model))+
geom_violin()+
ylab("Initial Spawning Output")
ggplot(SO_0,aes(Model,Metric,fill=Model))+
geom_hist()+
ylab("Initial Spawning Output")
ggplot(SO_0,aes(Model,Metric,fill=Model))+
geom_histogram()+
ylab("Initial Spawning Output")
ggplot(SO_0,aes(Metric,fill=Model))+
geom_histogram()+
ylab("Initial Spawning Output")
ggplot(SO_0,aes(Model,Metric,fill=Model))+
geom_violin()+
ylab("Initial Spawning Output")
head(SO_0)
summary(subset(SO_0,Model="Sel_dome")$Metric)
hist(subset(SO_0,Model="Sel_dome")$Metric)
hist(subset(SO_0,Model="Sel_est")$Metric)
hist(subset(SO_0,Model=="Sel_est")$Metric)
hist(subset(SO_0,Model=="Sel_dome")$Metric)
ggplot(SO_0,aes(Metric,Model))+
geom_count()+
ylab("Initial Spawning Output")
ggplot(SO_0,aes(Model,Metric))+
geom_count()+
ylab("Initial Spawning Output")
ylab("")
ggplot(SO_0,aes(Model,Metric))+
geom_violin()+geom_count(alpha=0.5)
ylab("Initial Spawning Output")
ggplot(SO_0,aes(Model,Metric,fill=Model))+
geom_violin()+
ylab("Initial Spawning Output")
ggplot(SO_0,aes(Model,Metric,fill=Model))+
geom_violin()+geom_count(alpha=0.5)
ylab("Initial Spawning Output")
ggplot(SO_0,aes(Model,Metric,fill=Model))+
geom_count()+
ylab("Initial Spawning Output")
ggplot(SO_0,aes(Model,Metric,fill=Model))+
geom_jitter()+
ylab("Initial Spawning Output")
ggplot(SO_0,aes(Model,Metric,color=Model))+
geom_jitter()+
ylab("Initial Spawning Output")
gg1<-ggplot(SO_0,aes(Model,Metric,fill=Model))+
geom_violin()+
ylab("Initial Spawning Output")
gg2<-ggplot(SO_t,aes(Model,Metric,fill=Model))+
geom_boxplot()+
ylab("Terminal Year Spawning Output")
gg3<-ggplot(Bratio_t,aes(Model,Metric,fill=Model))+
geom_boxplot()+
ylab("Relative stock status")
gg4<-ggplot(F_t,aes(Model,Metric,fill=Model))+
geom_boxplot()+
ylab("Fishing mortality")
gg5<-ggplot(SPR_t,aes(Model,Metric,fill=Model))+
geom_boxplot()+
ylab("1-SPR")
ggarrange(gg1,gg2,gg3,gg4,gg5)
gg1<-ggplot(SO_0,aes(Model,Metric))+
geom_violin()+
ylab("Initial Spawning Output")
gg2<-ggplot(SO_t,aes(Model,Metric))+
geom_boxplot()+
ylab("Terminal Year Spawning Output")
gg3<-ggplot(Bratio_t,aes(Model,Metric))+
geom_boxplot()+
ylab("Relative stock status")
gg4<-ggplot(F_t,aes(Model,Metric))+
geom_boxplot()+
ylab("Fishing mortality")
gg5<-ggplot(SPR_t,aes(Model,Metric))+
geom_boxplot()+
ylab("1-SPR")
ggarrange(gg1,gg2,gg3,gg4,gg5)
gg1<-ggplot(SO_0,aes(Model,Metric))+
geom_violin()+
ylab("Initial Spawning Output")
gg2<-ggplot(SO_t,aes(Model,Metric))+
geom_violin()+
ylab("Terminal Year Spawning Output")
gg3<-ggplot(Bratio_t,aes(Model,Metric))+
geom_violin()+
ylab("Relative stock status")
gg4<-ggplot(F_t,aes(Model,Metric))+
geom_violin()+
ylab("Fishing mortality")
gg5<-ggplot(SPR_t,aes(Model,Metric))+
geom_violin()+
ylab("1-SPR")
ggarrange(gg1,gg2,gg3,gg4,gg5)
ggsave(paste0(Ensemble_model_dir_out,"/Ensemble_comp_plots.png"))
runApp('GitHub/SS-DL-tool')
runApp('GitHub/SS-DL-tool')
shiny::runApp('GitHub/DL-Mapper')
runApp('GitHub/SS-DL-tool')
runApp('GitHub/SS-DL-tool')
remotes::install_github("pfmc-assessments/sa4ss")
install.packages(c("arkdb", "bit", "car", "cli", "cpp11", "dplyr", "duckdb", "flextable", "GA", "gghighlight", "ggplot2", "ggpubr", "ggrepel", "ggsignif", "Hmisc", "jpeg", "lifecycle", "lme4", "maptools", "MatrixModels", "matrixStats", "msm", "officer", "plotly", "png", "RcppArmadillo", "readr", "rfishbase", "rlang", "rmarkdown", "RSQLite", "rstan", "rstatix", "Rttf2pt1", "shinyWidgets", "sp", "tidyr", "tidyselect", "tinytex", "vctrs", "vroom", "webshot", "xfun", "XML"))
install.packages(c("arkdb", "bit", "car", "cli", "cpp11", "dplyr", "duckdb", "flextable", "GA", "gghighlight", "ggplot2", "ggpubr", "ggrepel", "ggsignif", "Hmisc", "jpeg", "lifecycle", "lme4", "maptools", "MatrixModels", "matrixStats", "msm", "officer", "plotly", "png", "RcppArmadillo", "readr", "rfishbase", "rlang", "rmarkdown", "RSQLite", "rstan", "rstatix", "Rttf2pt1", "shinyWidgets", "sp", "tidyr", "tidyselect", "tinytex", "vctrs", "vroom", "webshot", "xfun", "XML"))
install.packages(c("arkdb", "bit", "car", "cli", "cpp11", "dplyr", "duckdb", "flextable", "GA", "gghighlight", "ggplot2", "ggpubr", "ggrepel", "ggsignif", "Hmisc", "jpeg", "lifecycle", "lme4", "maptools", "MatrixModels", "matrixStats", "msm", "officer", "plotly", "png", "RcppArmadillo", "readr", "rfishbase", "rlang", "rmarkdown", "RSQLite", "rstan", "rstatix", "Rttf2pt1", "shinyWidgets", "sp", "tidyr", "tidyselect", "tinytex", "vctrs", "vroom", "webshot", "xfun", "XML"))
remotes::install_github("pfmc-assessments/sa4ss")
install.packages("cli")
install.packages("cli")
install.packages("cli")
library(cli)
library(cli, lib.loc = "C:/Program Files/R/R-4.2.1/library")
remove.packages("cli", lib="C:/Program Files/R/R-4.2.1/library")
remove.packages("cli")
remove.packages("cli", lib="C:/Program Files/R/R-4.2.1/library")
remove.packages("cli", lib="C:/Program Files/R/R-4.2.1/library")
install.packages("cli")
rmarkdown::pandoc_available()
rmarkdown::pandoc_exec()
library(sa4ss)
library(r4ss)
setwd("C:/Users/copej/Documents/GitHub/Sebastes_melanops_OR/Document")
base_name = "Reference model"
mod_loc = file.path(
"C:/Users/copej/Documents/GitHub/Sebastes_melanops_OR/Document/models",
base_name)
bookdown::render_book("00a.Rmd", clean=FALSE, output_dir = getwd())
install.packages("tinytex")
bookdown::render_book("00a.Rmd", clean=FALSE, output_dir = getwd())
install.packages('tinytex')
tinytex::install_tinytex()
install.packages('tinytex')
tinytex::install_tinytex()
packageDate("tinytex")
library(sa4ss)
library(r4ss)
sa4ss::session_test()
sa4ss::session_test()rmarkdown::pandoc_exec()
rmarkdown::pandoc_exec()
sa4ss::session_test()
Sys.setenv()
Sys.getenv(x = NULL, unset = "", names = NA)
rmarkdown::pandoc_available
rmarkdown::pandoc_available()
pandoc_version()
rmarkdown::pandoc_version()
library(sa4ss)
library(r4ss)
setwd("C:/Users/copej/Documents/GitHub/Sebastes_melanops_OR/Document")
base_name = "Reference model"
mod_loc = file.path(
"C:/Users/copej/Documents/GitHub/Sebastes_melanops_OR/Document/models",
base_name)
setwd("C:/Users/copej/Documents/GitHub/Sebastes_melanops_OR/Document")
file.exists("_main.Rmd")
if(file.exists("_main.Rmd")){
file.remove("_main.Rmd")
}
file.remove("_main.Rmd")
getwd()
file.exists("_main.Rmd")
bookdown::render_book("00a.Rmd", clean=FALSE, output_dir = getwd())
shiny::runApp('~/GitHub/DL-Mapper')
runApp('~/GitHub/SS-DL-tool')
ls()
mod_loc
getwd()
if(file.exists("_main.Rmd")){
file.remove("_main.Rmd")
}
# Render the pdf
bookdown::render_book("00a.Rmd", clean=FALSE, output_dir = getwd())
